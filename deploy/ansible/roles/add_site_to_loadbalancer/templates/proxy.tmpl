upstream {{ domain_name }}  {
  {% for client_ip in client_ips %}
  	server {{ client_ip }}:{{ project_port }};
  {% endfor %}
}

server {
   listen 80;
   server_name {{ domain_name }};
   rewrite ^(.*) https://$host$1 permanent;
}

server {
    # the port your site will be served on, default_server indicates that this server block
    # is the block to use if no blocks match the server_name
    listen      443;
    server_name {{ domain_name }};

    # the domain name it will serve for
    # server_name .example.com; # substitute your machine's IP address or FQDN
    charset     utf-8;

    access_log /var/log/nginx/{{ domain_name }}.access.log;
    error_log /var/log/nginx/{{ domain_name }}.error.log;

    # max upload size
    client_max_body_size 2M;   # adjust to taste

    # SSL parameters
    ssl on;

    ssl_certificate           /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/{{ domain_name }}/chain.pem;

    ssl_session_timeout 30m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass  http://{{ domain_name }};
    }
}